	<!-- Info -->

	<!-- 9 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				14.09.2025 AspenForest
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>Tried the created programming language <b>Weekend Game Language</b> in action. Wrote a small game.
					Fun.</p>
				<p>Items for switching the interface language have been added to the View menu in <b>BankViewer</b> and
				<b>WeekendTextEditor</b>.</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				13.09.2025 WeekendInterpreter
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>Improving the code, describing the project, describing my hastily invented programming language,
					testing, minor and not so minor edits... In general, nothing new today.</p>
			</td>
		</tr>
	</table>

	<!-- 8 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				07.09.2025 WeekendInterpreter
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>I worked on I18n and L10n. In the "View" menu, I enabled the "Russian" and "English" items to switch
					interface languages. Of course, the idea of ​​making an extension of the application without
					recompilation for new interface languages ​​immediately came to mind. But I thought about it and
					decided to stop. There is no point in equipping a tiny educational application with a super system
					of language support.</p>
				<p>My decision to support each project in two languages ​​added work, despite the fact that translators
					do a great job of translating simple phrases used for code comments.
				</p>
				<p>But I noticed that if at the beginning of the work I translated each phrase with the help of a
					translator, now it sometimes becomes easier for me to write a phrase in English myself than to copy
					and paste it into the translator and back. Getting used to the language occurs, and this is great!
				</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				06.09.2025 WeekendInterpreter
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>I finished the interpreter, including the remaining planned commands in the project. As a test, I
					wrote a program-example of using commands (CommandsDemo.wgl). This cannot be called serious testing,
					but the interpreter, frankly speaking, is slightly inferior in complexity to Java and even ABAP :)
				</p>
			</td>
		</tr>
	</table>

	<!-- 7 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				31.08.2025 WeekendInterpreter
			</td>
		</tr>
	</table>
	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="text">
				<p>Today I have two news: the first is that the interpreter displays the message "Hello World!",</p>
			</td>
			<td class="text">
				<p>the second is that my vacation is over. I have to pack up and fly home, and that's sad.</p>
			</td>
		</tr>
		<tr>
			<td class="text" align=center>
				<img src="pics/20250831_3.jpg" alt="Hello, World!" border="0">
			</td>
			<td class="text" align=center>
				<img src="pics/20250831_1.jpg" alt="Game over!" border="0">
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				30.08.2025 WeekendInterpreter
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>The interpreter is made as a text editor, which has a "Run" menu with two items: "Run" and "Stop".
					The central part of the screen is divided into two parts. The editor itself is located in the upper
					part, and in the lower part is the area in which everything that the program interpreted by the
					interpreter outputs will be displayed.</p>
				<p>I am slowly filling the pages of the site.</p>
				<p><b>Each project will be in two forms: Russian and English. This is useful for me.</b></p>
			</td>
		</tr>
	</table>

	<!-- 6 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				24.08.2025
			</td>
		</tr>
		<tr>
			<td class="text">
				<br>
				Today I flew in a hot air balloon.
			</td>
		</tr>
		<tr>
			<td class="text" align=center>
				<br>
				<a target="_blank" href="pics/20250824_1.jpg"><img src="pics/20250824_1_s.jpg" alt="Photo 1"
						border="0"></a>
				<img src="pics/separator.gif" alt="" border="0">
				<a target="_blank" href="pics/20250824_2.jpg"><img src="pics/20250824_2_s.jpg" alt="Photo 2"
						border="0"></a>
				<img src="pics/separator.gif" alt="" border="0">
				<a target="_blank" href="pics/20250824_3.jpg"><img src="pics/20250824_3_s.jpg" alt="Photo 3"
						border="0"></a>
				<img src="pics/separator.gif" alt="" border="0">
				<a target="_blank" href="pics/20250824_4.jpg"><img src="pics/20250824_4_s.jpg" alt="Photo 4"
						border="0"></a>
			</td>
		</tr>
		<tr>
			<td class="text">
				<br>
				We received this certificates:
			</td>
		</tr>

		<tr>
			<td class="text" align=center>
				<br>
				<a target="_blank" href="pics/20250824_5.jpg"><img src="pics/20250824_5_s.jpg"
						alt="Photo of certificates" border="0"></a>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				23.08.2025
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>I came up with and implemented the website template. I don't think this project will require anything
					more complex. But if it does, I'll come up with something more complex. For now, here it is:
				<ul>
					<li>Bilingual <a href="index.htm">home page</a>.</li>
					<li>Section for each repository + <a href="diary.htm">Diary</a>. They are also bilingual.</li>
				</ul>
				These sections are empty for now. I still need to think about their content.</p>
				<br>And now I'm going to swimming in the sea, because I'm on vacation and today is
			</td>
		</tr>
		<tr>
			<td class="text" align=center>
				<br>
				<img src="pics/perforation_top.jpg" alt="" border="0">
				<img src="pics/separator.gif" alt="" border="0">
				<img src="pics/perforation_top.jpg" alt="" border="0">
				<img src="pics/separator.gif" alt="" border="0">
				<img src="pics/perforation_top.jpg" alt="" border="0">
				<br>
				<img src="pics/20250823_1_s.jpg" alt="23.08.2025" border="0">
				<img src="pics/separator.gif" alt="" border="0">
				<img src="pics/20250823_2_s.jpg" alt="10:23" border="0">
				<img src="pics/separator.gif" alt="" border="0">
				<img src="pics/20250823_3_s.jpg" alt="34.2C" border="0">
				<br>
				<img src="pics/perforation_bottom.jpg" alt="" border="0">
				<img src="pics/separator.gif" alt="" border="0">
				<img src="pics/perforation_bottom.jpg" alt="" border="0">
				<img src="pics/separator.gif" alt="" border="0">
				<img src="pics/perforation_bottom.jpg" alt="" border="0">
			</td>
		</tr>
	</table>

	<!-- 5 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				17.08.2025 WeekendTextEditor
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>Internationalization and localization. I think it should be in any application.</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				16.08.2025 Bankviewer
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>New READMY, internationalization (this is interesting), localization (this is interesting),
					translation of all comments into English (I want to try what will come of this).</p>
			</td>
		</tr>
	</table>

	<!-- 4 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				10.08.2025 WeekendInterpreter
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>I was thinking about an idea for a project. It is useful to create even the simplest programming
					language.</p>
				<p>The <b>weekndinterpreter</b> repository has been created.</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				09.08.2025 WeekendTextEditor
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>Added a new menu item and toolbar button: "Replace...". Fixed the "Search..." function. Now the
					search starts from the cursor position.</p>
				<p>JEditorPane is now part of the Editor class. The message output methods have been moved from the main
					application class to the Messages class. This does not improve the program's performance, but
					reduces its complexity.</p>
			</td>
		</tr>
	</table>

	<!-- 3 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				03.08.2025 WeekendTextEditor
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>The <b>weektexteditor</b> repository has been created.</p>
				<p>I am converting Bankviewer into WeekendTextEditor.</p>
				<p>JEditorPane is used for editing text. The following menu items have been added: "Create", "Save" and
					"Save as...". Buttons have also been added to the toolbar. When opening a file, the program checks
					for changes in the already opened file (if any). The "Undo" and "Redo" items have been added to the
					"Edit" menu, their action is consistent with the user's actions. The "Cut" item is now activated
					when selecting a fragment of the edited text. The "View" menu now has the following items: "Use
					monospaced font", "Enlarge font", "Decrease font" and "Default font size". To increase the font, I
					use the Ctrl+Equals combination instead of Ctrl+Plus, since it is more convenient on my laptop.</p>
				<p>
					Of course, it would not hurt to fix the system for searching for a string in the text, to make
					search and replace possible. But that's all for today.</p>
				</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				02.08.2025 Bankviewer
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>The "View" menu now has the "Show toolbar" and "Show status bar" options. These settings are saved
					between program launches. The application, or rather the displayed table, now opens the context menu
					when you right-click.</p>
			</td>
		</tr>
	</table>

	<!-- 2 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				27.07.2025 Bankviewer
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>
					Added the ability to open files using Drag and Drop technology. To do this, in the
					BankViewer.makeJEditorPane() method, I created an <b>unnamed DropTarget</b> inheritor, in which I
					defined the drop(DropTargetDropEvent e) method. It fits in a few lines. Opening files has become
					more convenient. Now, if a file is in front of you in Explorer, there is no need to specify it in
					JFileChooser, moving through folders. Just drag the file from Explorer to the BankViewer window, and
					it will be displayed.
				<p>
					But it happens that after opening three files, you need to open the first one again. To do this,
					the last opened files are remembered in the File menu item (<b>LastFiles</b> class).
				</p>
				<p>
					In addition, a new View menu item has appeared. This is the ability to set the view and fill
					available on your computer. In the application, the <b>LAF</b> class is responsible for this.</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				26.07.2025 Bankviewer
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>
					A search for a string in the displayed table has been implemented. Now the program can search for
					strings in the displayed bank statement in the same way as any text editor does.</p>
				<p>
					The search is performed by the Finder class. Naturally, a window was needed to specify the search
					string and some search parameters (down, up, case-sensitive). For this, the FinderFrame class was
					created. The GridBagLayout layout manager is ideal for placing user interface elements in this
					window, but it is too "verbose", at least it seemed so to me. Therefore, to reduce the number of
					lines of code, I simplified GridBagLayout a little - the GBL class. In case of a successful search,
					the found fragment is highlighted in the displayed table, and in case of failure, a message is
					displayed in the status bar. To implement the status bar, the StatusBar class was created. This is a
					JPanel with three text fields. The far right one is reserved for messages, and the other two are
					used to display the number of rows and columns in the table. New items/buttons have been added to
					the menu and toolbar. The Cut and Paste options are only included because they are present in most
					apps. In this particular app, they do not work.</p>
				<p>
					I found that when I click a toolbar button, the focus is moved to the button that was clicked. This
					is correct. But if I select text in the table and click the toolbar button, the selection is
					deselected. Unexpected. Fortunately, this was easily fixed by calling setRequestFocusEnabled(false)
					on the toolbar buttons.</p>
			</td>
		</tr>
	</table>

	<!-- 1 -->

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<hr size=1 noshade>
				<br>
				20.07.2025 Bankviewer
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>
					The Convertor class has been created, which converts the original bank statement file into a
					structure convenient for display.</p>
				<p>
					To generate test bank statement files, I created a separate program, TestGenerator. It is located in
					the game.weekend.bankviewer.util package. In the program text, you can specify the file name, the
					number of bank statement lines, and it will generate a test file.</p>
				<p>
					<b>The program is working!</b> It has been assigned version 01.00.
				</p>
			</td>
		</tr>
	</table>

	<table width="80%" align=center border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td class="title3">
				<br>
				19.07.2025 Hello Github и Gitflic!
			</td>
		</tr>
		<tr>
			<td class="text">
				<p>
					The profile for the <b>weekend game</b> is created.</p>
				<p>
					The <b>BankViewer</b> repository for the first project is created. It is a <b>bank statement
						viewer</b> written in Java. Eclipse is used for development.</p>
				<p>
					I created the application skeleton: I created a JFrame as the main window, placed a JEditorPane in
					it for subsequent display of the bank statement, implemented a system for remembering and restoring
					the window position on the screen between program launches (the Proper class), created a menu and a
					toolbar (the Act class), wrapped JFileChooser in the Filer class for ease of use, and added methods
					for displaying messages to the main BankViewer application class.</p>
				<p>
					As a result, I got an application with an SDI interface that does nothing yet. In fact, the program
					does not yet contain a key-value file conversion to an HTML file.</p>
			</td>
		</tr>
	</table>

	<!-- End of info -->
